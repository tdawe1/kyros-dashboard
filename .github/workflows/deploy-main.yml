name: Build & Deploy (main → Vercel + Railway)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:   # allows manual trigger from GitHub UI

permissions:
  contents: read
  id-token: write

jobs:
  build-and-deploy:
    name: Build, test and deploy
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: 18
      PYTHON_VERSION: 3.11

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ---------- Frontend build (adjust paths if different) ----------
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install frontend dependencies
        working-directory: ./ui
        run: |
          npm ci

      - name: Run frontend tests (optional)
        working-directory: ./ui
        run: |
          npm test --if-present

      - name: Build frontend
        working-directory: ./ui
        run: |
          npm run build

      # ---------- Backend build (optional; adjust for your stack) ----------
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install backend deps (if required)
        working-directory: ./api
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run backend tests (optional)
        working-directory: ./api
        run: |
          pytest -q || true   # change behavior if you want to fail on tests

      # ---------- Deploy frontend to Vercel ----------
      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Vercel deploy (production)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./ui
        run: |
          # link the project (non-interactive) if needed:
          if [ -f .vercel/project.json ]; then
            echo ".vercel/project.json present; using it."
          else
            echo "Project not linked. Running vercel --confirm to deploy using token and project id."
          fi
          # Deploy production (use --prod to force production deploy on main)
          vercel --token $VERCEL_TOKEN --prod --confirm

      # ---------- Deploy backend/service to Railway ----------
      - name: Install Railway CLI
        run: |
          # Use npm global install (works in GitHub Actions)
          npm i -g @railway/cli@latest

      - name: Railway deploy service
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}
        working-directory: ./api
        run: |
          # Configure Railway token for non-interactive CI usage
          export RAILWAY_TOKEN="${RAILWAY_TOKEN}"
          # Link to the target project (non-interactive). If link fails, it's OK — continue to 'up'
          railway link "${RAILWAY_PROJECT_ID}" || true
          # Deploy (detach so the action doesn't hang)
          railway up --project "${RAILWAY_PROJECT_ID}" --detach || railway up --detach

      - name: Notify deployment finished
        run: echo "Deployment pipeline finished. Check Vercel and Railway dashboards for logs."
