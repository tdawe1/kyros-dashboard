name: Test Build and Validation

on:
  push:
    branches: [main, develop, feature/*]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.11'

jobs:
  # Test the build process without deploying
  test-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install Poetry and backend deps
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          cd backend
          poetry install --no-interaction --no-ansi

      - name: Install Node.js dependencies
        run: |
          cd frontend
          npm ci

      - name: Run Python tests
        run: |
          cd backend
          poetry run pytest --tb=short

      - name: Run frontend tests
        run: |
          cd frontend
          npm run test:ci

      - name: Test API startup
        run: |
          cd backend
          poetry run python -c "
          import main
          print('✅ API imports successfully')
          print('✅ All dependencies are available')
          "

      - name: Build frontend (test)
        run: |
          cd frontend
          npm run build
        env:
          VITE_API_BASE_URL: http://localhost:8000

      - name: Test frontend build
        run: |
          cd frontend
          if [ -d "dist" ]; then
            echo "✅ Frontend build successful"
            echo "📁 Build output:"
            ls -la dist/
          else
            echo "❌ Frontend build failed"
            exit 1
          fi

      - name: Validate build artifacts
        run: |
          echo "🔍 Validating build artifacts..."

          # Check if main files exist
          if [ -f "frontend/dist/index.html" ]; then
            echo "✅ index.html exists"
          else
            echo "❌ index.html missing"
            exit 1
          fi

          if [ -d "frontend/dist/assets" ]; then
            echo "✅ Assets directory exists"
            echo "📦 Assets:"
            ls -la frontend/dist/assets/
          else
            echo "❌ Assets directory missing"
            exit 1
          fi

      - name: Test API health endpoint
        run: |
          cd backend
          # Start API in background
          poetry run uvicorn main:app --host 0.0.0.0 --port 8000 &
          API_PID=$!

          # Cleanup function
          cleanup() {
            if [ ! -z "$API_PID" ]; then
              kill $API_PID 2>/dev/null || true
            fi
          }
          trap cleanup EXIT INT TERM

          # Wait for API to start with retry loop
          echo "Waiting for API to start..."
          for i in {1..30}; do
            if curl -fsS http://localhost:8000/api/health >/dev/null 2>&1; then
              echo "✅ API health check passed"
              break
            fi
            if [ $i -eq 30 ]; then
              echo "❌ API health check failed - timeout after 30 attempts"
              exit 1
            fi
            sleep 1
          done

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            frontend/dist/
            backend/
          retention-days: 7

      - name: Build Summary
        run: |
          echo "🎉 Build Test Summary:"
          echo "✅ Python dependencies installed"
          echo "✅ Node.js dependencies installed"
          echo "✅ Python tests passed"
          echo "✅ Frontend tests passed"
          echo "✅ API imports successfully"
          echo "✅ Frontend build successful"
          echo "✅ Build artifacts validated"
          echo "✅ API health check passed"
          echo ""
          echo "🚀 Your application is ready for deployment!"
