"""Create scheduler tables

Revision ID: d2941601bed9
Revises:
Create Date: 2025-09-02 18:02:04.480220

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "d2941601bed9"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "idempotency_keys",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("owner_user_id", sa.String(length=255), nullable=True),
        sa.Column("key", sa.String(length=255), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_idempotency_keys_key"), "idempotency_keys", ["key"], unique=True
    )
    op.create_index(
        op.f("ix_idempotency_keys_owner_user_id"),
        "idempotency_keys",
        ["owner_user_id"],
        unique=False,
    )
    op.create_table(
        "scheduled_jobs",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("tool", sa.String(length=100), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=True),
        sa.Column("owner_user_id", sa.String(length=255), nullable=True),
        sa.Column("input_source", sa.JSON(), nullable=False),
        sa.Column("options", sa.JSON(), nullable=True),
        sa.Column("next_run_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("timezone", sa.String(length=50), nullable=True),
        sa.Column("recurrence", sa.String(length=100), nullable=True),
        sa.Column("status", sa.String(length=20), nullable=False),
        sa.Column("max_runs", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_scheduled_jobs_next_run_at"),
        "scheduled_jobs",
        ["next_run_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_scheduled_jobs_owner_user_id"),
        "scheduled_jobs",
        ["owner_user_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_scheduled_jobs_status"), "scheduled_jobs", ["status"], unique=False
    )
    op.create_index(
        op.f("ix_scheduled_jobs_tool"), "scheduled_jobs", ["tool"], unique=False
    )
    op.create_table(
        "job_runs",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("scheduled_job_id", sa.UUID(), nullable=False),
        sa.Column("status", sa.String(length=20), nullable=False),
        sa.Column("started_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("finished_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("run_payload", sa.JSON(), nullable=True),
        sa.Column("run_result", sa.JSON(), nullable=True),
        sa.Column("token_usage", sa.Integer(), nullable=True),
        sa.Column("error", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["scheduled_job_id"], ["scheduled_jobs.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_job_runs_scheduled_job_id"),
        "job_runs",
        ["scheduled_job_id"],
        unique=False,
    )
    op.create_index(op.f("ix_job_runs_status"), "job_runs", ["status"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_job_runs_status"), table_name="job_runs")
    op.drop_index(op.f("ix_job_runs_scheduled_job_id"), table_name="job_runs")
    op.drop_table("job_runs")
    op.drop_index(op.f("ix_scheduled_jobs_tool"), table_name="scheduled_jobs")
    op.drop_index(op.f("ix_scheduled_jobs_status"), table_name="scheduled_jobs")
    op.drop_index(op.f("ix_scheduled_jobs_owner_user_id"), table_name="scheduled_jobs")
    op.drop_index(op.f("ix_scheduled_jobs_next_run_at"), table_name="scheduled_jobs")
    op.drop_table("scheduled_jobs")
    op.drop_index(
        op.f("ix_idempotency_keys_owner_user_id"), table_name="idempotency_keys"
    )
    op.drop_index(op.f("ix_idempotency_keys_key"), table_name="idempotency_keys")
    op.drop_table("idempotency_keys")
    # ### end Alembic commands ###
