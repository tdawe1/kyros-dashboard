plan_id: 2025-09-04-shake
baseline_branch: develop
lanes: { planner: gpt-5-high, frontend: claude-4-sonnet, critic: gpt-5-high }
tasks:
  - id: T-000
    title: Add “/ready:UP” badge to header
    lane: frontend
    acceptance:
      - Badge shows “UP” when GET /ready=200 else “DOWN”
      - Polls every 30s
      - No console errors on preview
    changescope: [ui/**]
plan_id: 2025-09-04-stabilize-develop-release
baseline_branch: develop
lanes:
  planner: "@planner"
  ci:
    implementers: ["@impl-ci"]
    critic: "@critic"
  backend:
    implementers: ["@impl-backend"]
    critic: "@critic"
  frontend:
    implementers: ["@impl-frontend"]
    critic: "@critic"
  docs:
    implementers: ["@impl-docs"]
    critic: "@critic"
tasks:
  - id: T-501
    title: Gate staging deploy and finalize CI installs
    lane: ci
    acceptance:
      - "staging.yml runs only on push to `develop` or when required secrets exist"
      - "Tests workflow uses `poetry install --no-root` in all backend install steps"
      - "No CI install/setup failures across required jobs"
      - "No change to production deploy behavior from `main`"
    changescope:
      - .github/workflows/staging.yml
      - .github/workflows/test.yml
      - .github/workflows/quality-checks.yml
    estimate: S — YAML-only fixes; low risk
    risk: Over-gating staging; mitigate with explicit if on push develop and secrets checks

  - id: T-502
    title: Make backend-tests green on 3.12 and 3.13
    lane: backend
    acceptance:
      - "backend-tests (3.12) job passes on a PR against `develop`"
      - "backend-tests (3.13) job passes on a PR against `develop`"
      - "Coverage XML and JUnit XML artifacts uploaded"
    changescope:
      - backend/tests/**
      - backend/core/**
      - backend/middleware/**
    estimate: M — targeted test fixes; use deterministic mocks
    risk: Time-dependent or Redis-related flakiness; mitigate with time mocking and fixture isolation

  - id: T-503
    title: Fix frontend build and unit tests
    lane: frontend
    acceptance:
      - "`npm run lint` passes with no errors"
      - "`npm run build` (Vite) succeeds with no errors"
      - "`npm run test:ci` (Vitest) passes on CI"
    changescope:
      - frontend/src/**
      - frontend/vitest.config.js
      - frontend/vite.config.js
      - frontend/eslint.config.js
    estimate: M — config + focused test fixes
    risk: Hidden network coupling; mitigate with fetch stubs/mocks and baseURL config

  - id: T-504
    title: Document branch model and PR policy
    lane: docs
    acceptance:
      - "CONTRIBUTING.md contains PRs target develop; Update branch before review; releases via develop→main"
      - "README.md includes a short Branch Model section linking to CONTRIBUTING"
      - ".github/pull_request_template.md checklist includes base=develop, up-to-date, size/scope guard"
      - "No docs instruct to target `main`"
    changescope:
      - CONTRIBUTING.md
      - README.md
      - .github/pull_request_template.md
    estimate: S — doc edits only
    risk: Docs drift; mitigate by linking to workflows and collab guard rules

  - id: T-505
    title: Integrate release PR develop→main
    lane: ci
    dependencies:
      - T-501
      - T-502
      - T-503
      - T-504
    acceptance:
      - "Release PR (existing #18 or new) passes all required checks"
      - "PR merged to `main` and deployment pipeline triggers successfully"
      - "Post-merge, `main` protection/required checks remain intact"
    changescope:
      - (no code changes; CI/release coordination only)
    estimate: S — coordination and verification
    risk: Last-minute red checks; mitigate by re-running and hotfixing small issues before merge
